/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./JS/SMSCampaign.js":
/*!***************************!*\
  !*** ./JS/SMSCampaign.js ***!
  \***************************/
/***/ (() => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nvar groupContactsMap = {};\nvar groupContactNumbers = new Set();\nvar manualContacts = new Set();\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  console.log(\"DOMContentLoaded event triggered\");\n  Office.onReady(function (info) {\n    console.log(\"Office.onReady event triggered\");\n    if (info.host === Office.HostType.Excel) {\n      Initialize().then(function () {\n        fetchData().then(function () {\n          console.log(localStorage.getItem(\"login\"));\n          if (localStorage.getItem(\"login\") === \"true\") {\n            clearSavedData();\n          } else {\n            restoreFormData();\n          }\n        });\n      });\n    } else {\n      console.error(\"This script only runs in Excel.\");\n    }\n  });\n});\nfunction Initialize() {\n  return _Initialize.apply(this, arguments);\n} //Data \nfunction _Initialize() {\n  _Initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var container, templateDropdown;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          AddMobileNumberColumn();\n          loadPlaceholders();\n          updateMessageCounter();\n          window.filters();\n          container = document.querySelector('.campaign-container');\n          if (container) {\n            container.style.backgroundColor = '#fff';\n            container.style.width = '150%';\n            container.style.height = '100%';\n          }\n          try {\n            templateDropdown = document.getElementById('template');\n            templateDropdown.addEventListener('change', handleTemplateChange);\n            document.getElementById('backButton').addEventListener('click', backButton);\n            document.getElementById('group-list').addEventListener('change', fetchContactsFromGroup);\n            document.getElementById('contact-list').addEventListener('change', manageContactInExcel);\n            document.getElementById('placeholderButton').addEventListener('click', togglePlaceholderList);\n            document.getElementById('message').addEventListener('input', updateMessageCounter);\n            document.getElementById('variable-dropdown').addEventListener('change', handleDropdownChange);\n            document.getElementById('urlButton').addEventListener('click', openUrlDialog);\n            document.getElementById('addUrlButton').addEventListener('click', handleAddUrl);\n            document.getElementById('closeUrlButton').addEventListener('click', closeUrlDialog);\n            document.getElementById('launchButton').addEventListener('click', validateForm);\n            document.getElementById('sender').addEventListener('change', handleSenderChange);\n          } catch (error) {\n            console.error(\"Error initializing event listeners:\", error);\n          }\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _Initialize.apply(this, arguments);\n}\nfunction saveFormData() {\n  try {\n    var campaignNameElem = document.getElementById('campaign-name');\n    var senderElem = document.getElementById('sender');\n    var messageElem = document.getElementById('message');\n    var templateElem = document.getElementById('template');\n    var variableDropdownElem = document.getElementById('variable-dropdown');\n    if (!campaignNameElem || !senderElem || !messageElem || !templateElem || !variableDropdownElem) {\n      throw new Error('One or more form elements are missing');\n    }\n    var formData = {\n      campaignName: campaignNameElem.value,\n      sender: senderElem.value,\n      message: messageElem.value,\n      selectedGroups: Array.from(document.querySelectorAll('#group-list input[type=checkbox]:checked')).map(function (checkbox) {\n        return checkbox.value;\n      }),\n      selectedContacts: Array.from(document.querySelectorAll('#contact-list input[type=checkbox]:checked')).map(function (checkbox) {\n        return checkbox.value;\n      }),\n      contactDropdownContacts: Array.from(document.querySelectorAll('#contactDropdownContent input[type=checkbox]:checked')).map(function (checkbox) {\n        return checkbox.value;\n      }),\n      templateId: templateElem.value,\n      type: variableDropdownElem.value\n    };\n    console.log('Saving formData:', formData);\n    localStorage.setItem('formData', JSON.stringify(formData));\n\n    // Save Excel data\n    Excel.run( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(context) {\n        var sheet, usedRange, excelData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              sheet = context.workbook.worksheets.getActiveWorksheet();\n              usedRange = sheet.getUsedRange();\n              usedRange.load('values');\n              _context.next = 5;\n              return context.sync();\n            case 5:\n              excelData = usedRange.values;\n              console.log('Saving excelData:', excelData);\n              localStorage.setItem('excelData', JSON.stringify(excelData));\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (error) {\n      console.error('Error saving Excel data:', error);\n    });\n  } catch (error) {\n    console.error('Error in saveFormData:', error);\n  }\n}\nfunction restoreFormData() {\n  try {\n    var formData = localStorage.getItem('formData');\n    var excelData = localStorage.getItem('excelData');\n\n    // Check if formData is a valid JSON string\n    try {\n      formData = JSON.parse(formData);\n    } catch (e) {\n      console.error('Error parsing formData:', e);\n      formData = null;\n    }\n\n    // Check if excelData is a valid JSON string\n    try {\n      excelData = JSON.parse(excelData);\n    } catch (e) {\n      console.error('Error parsing excelData:', e);\n      excelData = null;\n    }\n    console.log('Restoring formData:', formData);\n    console.log('Restoring excelData:', excelData);\n    if (formData) {\n      // Populate the select elements after the options are available\n      setTimeout(function () {\n        if (document.getElementById('campaign-name')) {\n          document.getElementById('campaign-name').value = formData.campaignName;\n        }\n        if (document.getElementById('sender')) {\n          document.getElementById('sender').value = formData.sender;\n        }\n        if (document.getElementById('template')) {\n          document.getElementById('template').value = formData.templateId;\n        }\n        if (document.getElementById('variable-dropdown')) {\n          document.getElementById('variable-dropdown').value = formData.type;\n        }\n        if (document.getElementById('message')) {\n          document.getElementById('message').value = formData.message;\n        }\n\n        // Restore selected groups\n        var selectedGroups = formData.selectedGroups || [];\n        selectedGroups.forEach(function (group) {\n          var checkbox = document.querySelector(\"#group-list input[type=checkbox][value=\\\"\".concat(group, \"\\\"]\"));\n          if (checkbox) {\n            checkbox.checked = true;\n          }\n        });\n\n        // Restore selected contacts\n        var selectedContacts = formData.selectedContacts || [];\n        selectedContacts.forEach(function (contact) {\n          var checkbox = document.querySelector(\"#contact-list input[type=checkbox][value=\\\"\".concat(contact, \"\\\"]\"));\n          if (checkbox) {\n            checkbox.checked = true;\n          }\n        });\n        var contactDropdownContacts = formData.contactDropdownContacts || [];\n        contactDropdownContacts.forEach(function (contact) {\n          var checkbox = document.querySelector(\"#contactDropdownContent input[type=checkbox][value=\\\"\".concat(contact, \"\\\"]\"));\n          if (checkbox) {\n            checkbox.checked = true;\n          }\n        });\n      }, 1000);\n    }\n    if (excelData) {\n      Excel.run( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(context) {\n          var sheet, range;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                sheet = context.workbook.worksheets.getActiveWorksheet();\n                range = sheet.getRangeByIndexes(0, 0, excelData.length, excelData[0].length);\n                range.values = excelData;\n                _context2.next = 5;\n                return context.sync();\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2);\n        }));\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }())[\"catch\"](function (error) {\n        console.error('Error restoring Excel data:', error);\n      });\n    }\n  } catch (error) {\n    console.error('Error in restoreFormData:', error);\n  }\n}\nfunction fetchData() {\n  return _fetchData.apply(this, arguments);\n}\nfunction _fetchData() {\n  _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return fetchClient();\n        case 2:\n          _context4.next = 4;\n          return fetchBalance();\n        case 4:\n          _context4.next = 6;\n          return fetchGroups();\n        case 6:\n          _context4.next = 8;\n          return fetchContacts();\n        case 8:\n          _context4.next = 10;\n          return fetchSenders();\n        case 10:\n          _context4.next = 12;\n          return fetchTemplates();\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _fetchData.apply(this, arguments);\n}\nfunction refreshToken() {\n  return _refreshToken.apply(this, arguments);\n}\nfunction _refreshToken() {\n  _refreshToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n    var refreshToken, accessToken, apiRefreshToken, tenantKey, response, data;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          refreshToken = localStorage.getItem('refreshToken');\n          accessToken = localStorage.getItem('accessToken');\n          apiRefreshToken = \"https://omni-apis.montymobile.com/member/api/v1/auth/refresh-token\";\n          tenantKey = \"98df9ffe-fa84-41ee-9293-33614722d952\";\n          _context5.prev = 4;\n          _context5.next = 7;\n          return fetch(apiRefreshToken, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Bearer \".concat(accessToken),\n              'Tenant': tenantKey\n            },\n            body: JSON.stringify({\n              RefreshToken: refreshToken\n            })\n          });\n        case 7:\n          response = _context5.sent;\n          if (response.ok) {\n            _context5.next = 10;\n            break;\n          }\n          throw new Error(\"Failed to refresh token: \".concat(response.statusText));\n        case 10:\n          _context5.next = 12;\n          return response.json();\n        case 12:\n          data = _context5.sent;\n          localStorage.setItem('accessToken', data.data.accessToken);\n          localStorage.setItem('refreshToken', data.data.refreshToken);\n          return _context5.abrupt(\"return\", data.data.accessToken);\n        case 18:\n          _context5.prev = 18;\n          _context5.t0 = _context5[\"catch\"](4);\n          console.error('Error refreshing token:', _context5.t0);\n          throw _context5.t0;\n        case 22:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[4, 18]]);\n  }));\n  return _refreshToken.apply(this, arguments);\n}\nfunction fetchWithAuth(_x3, _x4) {\n  return _fetchWithAuth.apply(this, arguments);\n} //Fetch\nfunction _fetchWithAuth() {\n  _fetchWithAuth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(url, options) {\n    var retry,\n      accessToken,\n      tenantKey,\n      response,\n      newAccessToken,\n      _args6 = arguments;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          retry = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : true;\n          accessToken = localStorage.getItem('accessToken');\n          tenantKey = \"98df9ffe-fa84-41ee-9293-33614722d952\";\n          options.headers = _objectSpread(_objectSpread({}, options.headers), {}, {\n            'Authorization': \"Bearer \".concat(accessToken),\n            'Tenant': tenantKey\n          });\n          _context6.prev = 4;\n          _context6.next = 7;\n          return fetch(url, options);\n        case 7:\n          response = _context6.sent;\n          if (!(response.status === 401 && retry)) {\n            _context6.next = 14;\n            break;\n          }\n          _context6.next = 11;\n          return refreshToken();\n        case 11:\n          newAccessToken = _context6.sent;\n          options.headers['Authorization'] = \"Bearer \".concat(newAccessToken);\n          return _context6.abrupt(\"return\", fetchWithAuth(url, options, false));\n        case 14:\n          return _context6.abrupt(\"return\", response);\n        case 17:\n          _context6.prev = 17;\n          _context6.t0 = _context6[\"catch\"](4);\n          console.error(\"Error fetching \".concat(url, \":\"), _context6.t0);\n          throw _context6.t0;\n        case 21:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[4, 17]]);\n  }));\n  return _fetchWithAuth.apply(this, arguments);\n}\nfunction fetchBalance() {\n  var apiGetBalance = \"\".concat(\"https://omni-apis.montymobile.com/billing/api/v1/clientaccount/balance/get-default-balance?ClientGuid=\").concat(localStorage.getItem(\"clientId\"));\n  fetchWithAuth(apiGetBalance, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok: \".concat(response.statusText));\n    }\n    return response.json();\n  }).then(function (data) {\n    if (data && data.data && Array.isArray(data.data) && data.data.length > 0) {\n      var balanceData = data.data[0];\n      document.getElementById('balance').textContent = \"\".concat(balanceData.currentBalance, \" \").concat(balanceData.currencyCode);\n    } else {\n      console.error('Unexpected response format:', data);\n    }\n  })[\"catch\"](function (error) {\n    console.error('Error fetching balance:', error);\n  });\n}\nfunction fetchClient() {\n  return new Promise(function (resolve, reject) {\n    var clientId = localStorage.getItem('clientId');\n    var apiGetClient = \"\".concat(\"https://omni-apis.montymobile.com/member/api/admin/v1/client?ClientGuid=\").concat(clientId);\n    var loadingIndicator = document.getElementById('loadingIndicator');\n    if (loadingIndicator) {\n      loadingIndicator.style.display = 'flex';\n    }\n    fetchWithAuth(apiGetClient, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok: \".concat(response.statusText));\n      }\n      return response.json();\n    }).then(function (data) {\n      if (data && data.data && data.data.client) {\n        var client = data.data.client;\n        var fullName = \"\".concat(client.firstName, \" \").concat(client.lastName);\n        document.getElementById('profile-name').innerHTML = \"<i class=\\\"fas fa-user\\\"></i> \".concat(fullName);\n        resolve(client);\n      } else {\n        console.error('Unexpected response format:', data);\n        reject('Unexpected response format');\n      }\n    })[\"catch\"](function (error) {\n      console.error(\"Error fetching client with ID \".concat(clientId, \":\"), error);\n      reject(error);\n    })[\"finally\"](function () {\n      if (loadingIndicator) {\n        loadingIndicator.style.display = 'none';\n      }\n    });\n  });\n}\nfunction fetchGroups() {\n  var apiGetGroup = \"https://omni-apis.montymobile.com//notification/api/v1/PhoneBook/get-all\";\n  fetchWithAuth(apiGetGroup, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok: \".concat(response.statusText));\n    }\n    return response.json();\n  }).then(function (data) {\n    if (data && data.data && data.data.phoneBooks) {\n      populateGroups(data.data.phoneBooks);\n    } else {\n      console.error('Unexpected response format:', data);\n    }\n  })[\"catch\"](function (error) {\n    console.error('Error fetching groups:', error);\n  });\n}\nfunction fetchContacts() {\n  var apiGetContact = \"https://omni-apis.montymobile.com/notification/api/v1/Contact?PageIndex=1&PageSize=50\";\n  fetchWithAuth(apiGetContact, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok: \".concat(response.statusText));\n    }\n    return response.json();\n  }).then(function (data) {\n    if (data && data.data && data.data.contacts) {\n      populateContacts(data.data.contacts);\n    } else {\n      console.error('Unexpected response format:', data);\n    }\n  })[\"catch\"](function (error) {\n    console.error('Error fetching contacts:', error);\n  });\n}\nfunction fetchSenders() {\n  var apiGetSender = \"https://omni-apis.montymobile.com/notification/api/v1/sender/get-all?StatusTag=APPROVED&ServiceTag=ONE_WAY_SMS\";\n  fetchWithAuth(apiGetSender, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok: \".concat(response.statusText));\n    }\n    return response.json();\n  }).then(function (data) {\n    if (data && data.data && data.data.senders) {\n      populateSenders(data.data.senders);\n    } else {\n      console.error('Unexpected response format:', data);\n    }\n  })[\"catch\"](function (error) {\n    console.error('Error fetching senders:', error);\n  })[\"finally\"](function () {\n    loadingIndicator.style.display = 'none';\n  });\n}\nfunction fetchTemplates() {\n  var loadingIndicator = document.getElementById('loadingIndicator');\n  loadingIndicator.style.display = 'block';\n  var apiGetTemplates = \"https://omni-apis.montymobile.com/notification/api/v1/smstemplate/get-all\";\n  fetchWithAuth(apiGetTemplates, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok: \".concat(response.statusText));\n    }\n    return response.json();\n  }).then(function (data) {\n    if (data && data.data && data.data.smsTemplates) {\n      populateTemplates(data.data.smsTemplates);\n    } else {\n      console.error('Unexpected response format:', data);\n    }\n  })[\"catch\"](function (error) {\n    console.error('Error fetching templates:', error);\n  })[\"finally\"](function () {\n    loadingIndicator.style.display = 'none';\n  });\n}\nfunction fetchTemplateById(templateId) {\n  return new Promise(function (resolve, reject) {\n    var loadingIndicator = document.getElementById('loadingIndicator');\n    loadingIndicator.style.display = 'block';\n    var apiGetTemplateById = \"\".concat(\"https://omni-apis.montymobile.com/notification/api/v1/smstemplate?smstemplateguid=\").concat(templateId);\n    fetchWithAuth(apiGetTemplateById, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok: \".concat(response.statusText));\n      }\n      return response.json();\n    }).then(function (data) {\n      if (data && data.data && data.data.smsTemplate) {\n        var template = data.data.smsTemplate;\n        displayTemplate(template);\n        //const placeholders = extractPlaceholders(template.text);\n        //updateMessageCounter();\n        resolve(template);\n      } else {\n        console.error('Unexpected response format:', data);\n        reject('Unexpected response format');\n      }\n    })[\"catch\"](function (error) {\n      console.error(\"Error fetching template with ID \".concat(templateId, \":\"), error);\n      reject(error);\n    })[\"finally\"](function () {\n      loadingIndicator.style.display = 'none';\n    });\n  });\n}\nfunction fetchContactsFromGroup() {\n  var loadingIndicator = document.getElementById('loadingIndicator');\n  loadingIndicator.style.display = 'block';\n  var selectedGroups = Array.from(document.querySelectorAll('#group-list input[type=checkbox]:checked')).map(function (checkbox) {\n    return checkbox.value;\n  });\n  var apiGetContactByGroup = \"https://omni-apis.montymobile.com//notification/api/v1/PhoneBook/contact?PhoneBookGuid=\";\n  var fetchPromises = selectedGroups.filter(function (groupId) {\n    return !groupContactsMap[groupId];\n  }).map(function (groupId) {\n    var apiUrl = \"\".concat(apiGetContactByGroup).concat(groupId);\n    return fetchWithAuth(apiUrl, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok: \".concat(response.statusText));\n      }\n      return response.json();\n    }).then(function (data) {\n      groupContactsMap[groupId] = data.data.phoneBookContacts.map(function (contact) {\n        return contact.mobileNumber;\n      });\n      groupContactsMap[groupId].forEach(function (contact) {\n        return groupContactNumbers.add(contact);\n      });\n    });\n  });\n  Promise.all(fetchPromises).then(function () {\n    Object.keys(groupContactsMap).forEach(function (groupId) {\n      if (!selectedGroups.includes(groupId)) {\n        groupContactsMap[groupId].forEach(function (contact) {\n          return groupContactNumbers[\"delete\"](contact);\n        });\n        delete groupContactsMap[groupId];\n      }\n    });\n    updateExcel();\n  })[\"catch\"](function (error) {\n    console.error('Error fetching contacts:', error);\n  })[\"finally\"](function () {\n    loadingIndicator.style.display = 'none';\n  });\n}\n\n//Populate\nfunction populateTemplates(templates) {\n  var templateSelect = document.getElementById('template');\n  templates.forEach(function (template) {\n    var option = document.createElement('option');\n    option.value = template.recordGuid;\n    option.text = template.name;\n    templateSelect.appendChild(option);\n  });\n}\nfunction populateSenders(senders) {\n  var senderSelect = document.getElementById('sender');\n  senders.forEach(function (sender) {\n    var option = document.createElement('option');\n    option.value = sender.recordGuid;\n    option.text = sender.name;\n    senderSelect.appendChild(option);\n  });\n}\nfunction populateGroups(groups) {\n  var groupList = document.getElementById('group-list');\n  groupList.innerHTML = '';\n  groups.forEach(function (group) {\n    var label = document.createElement('label');\n    label.textContent = group.name;\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.value = group.recordGuid;\n    checkbox.addEventListener('change', fetchContactsFromGroup);\n    label.prepend(checkbox);\n    groupList.appendChild(label);\n  });\n}\nfunction populateContacts(contacts) {\n  var contactList = document.getElementById('contact-list');\n  contactList.innerHTML = '';\n  contacts.forEach(function (contact) {\n    var label = document.createElement('label');\n    var mobileNumber = contact.mobileNumber ? contact.mobileNumber : \"N/A\";\n    label.textContent = \"\".concat(contact.firstName, \" \").concat(contact.lastName, \" (\").concat(mobileNumber, \")\");\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.value = contact.mobileNumber;\n    checkbox.addEventListener('change', manageContactInExcel);\n    label.prepend(checkbox);\n    contactList.appendChild(label);\n  });\n}\n\n//Excel\n\nfunction AddAllColumns() {\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getActiveWorksheet();\n    var fixedOrder = [\"Mobile Number\", \"LongUrl\", \"Title\", \"FirstName\", \"LastName\", \"Country\", \"Email\", \"Address\", \"City\", \"Gender\"];\n    var headerRange = sheet.getRangeByIndexes(0, 0, 1, fixedOrder.length);\n    headerRange.values = [fixedOrder];\n    headerRange.format.fill.color = \"#ed204c\"; // Set header cell color to #ed204c\n    headerRange.format.font.color = \"#FFFFFF\"; // White text color\n    headerRange.format.font.bold = true; // Bold text\n    headerRange.format.horizontalAlignment = \"Center\"; // Center alignment\n\n    var usedRange = sheet.getUsedRange();\n    usedRange.load('rowCount, columnCount');\n    var mobileNumberData;\n    return context.sync().then(function () {\n      // Store Mobile Number data\n      if (usedRange.rowCount > 1) {\n        var mobileNumberRange = sheet.getRangeByIndexes(1, 0, usedRange.rowCount - 1, 1);\n        mobileNumberRange.load('values');\n        return context.sync().then(function () {\n          mobileNumberData = mobileNumberRange.values;\n        });\n      }\n    }).then(function () {\n      // Clear all rows except for the header\n      if (usedRange.rowCount > 1) {\n        var dataRange = sheet.getRangeByIndexes(1, 0, usedRange.rowCount - 1, usedRange.columnCount);\n        dataRange.clear();\n      }\n\n      // Auto fit columns\n      sheet.getUsedRange().getEntireColumn().format.autofitColumns();\n\n      // Restore Mobile Number data\n      if (mobileNumberData) {\n        var mobileNumberRange = sheet.getRangeByIndexes(1, 0, mobileNumberData.length, 1);\n        mobileNumberRange.values = mobileNumberData;\n      }\n      console.log('All columns added and fitted successfully');\n    });\n  })[\"catch\"](function (error) {\n    console.error('Error adding all columns:', error);\n  });\n}\nfunction AddMobileNumberColumn() {\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getActiveWorksheet();\n    sheet.load('name');\n    return context.sync().then(function () {\n      if (!sheet.name) {\n        console.error(\"Error: Active worksheet not found.\");\n        return;\n      }\n      var headers = [\"Mobile Number\"];\n      headers.forEach(function (header, index) {\n        var cell = sheet.getCell(0, index);\n        cell.values = [[header]];\n        cell.format.fill.color = \"#ed204c\"; // Assuming the desired color\n        cell.format.font.color = \"#FFFFFF\";\n        cell.format.font.bold = true;\n        cell.format.horizontalAlignment = \"Center\";\n      });\n      sheet.getUsedRange().getEntireColumn().format.autofitColumns();\n      var usedRange = sheet.getUsedRange();\n      usedRange.load('rowCount, columnCount');\n      return context.sync().then(function () {\n        if (usedRange.rowCount > 0 && usedRange.columnCount > headers.length) {\n          var columnRange = sheet.getRangeByIndexes(0, headers.length, usedRange.rowCount, usedRange.columnCount - headers.length);\n          columnRange.clear();\n        }\n        return context.sync();\n      });\n    });\n  })[\"catch\"](function (error) {\n    console.error(\"Error in AddMobileNumberColumn: \" + error);\n  });\n}\nfunction manageContactInExcel(event) {\n  var mobileNumber = event.target.value;\n  var isChecked = event.target.checked;\n  if (isChecked) {\n    addContactToExcel(mobileNumber);\n  } else {\n    removeContactFromExcel(mobileNumber);\n  }\n}\nfunction addContactToExcel(mobileNumber) {\n  manualContacts.add(mobileNumber);\n  updateExcel();\n}\nfunction removeContactFromExcel(mobileNumber) {\n  manualContacts[\"delete\"](mobileNumber);\n  updateExcel();\n}\nfunction updateExcel() {\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getActiveWorksheet();\n    var usedRange = sheet.getUsedRange();\n    usedRange.load('values');\n    return context.sync().then(function () {\n      var currentValues = usedRange.values.map(function (row) {\n        return row[0];\n      }).filter(function (value) {\n        return value;\n      });\n      var groupContacts = [];\n      Object.values(groupContactsMap).forEach(function (contacts) {\n        groupContacts.push.apply(groupContacts, _toConsumableArray(contacts));\n      });\n      var manualContactsArray = Array.from(manualContacts);\n      var newValues = _toConsumableArray(new Set([].concat(manualContactsArray, groupContacts)));\n      var updatedValues = newValues.map(function (value) {\n        return [value];\n      });\n      if (updatedValues.length === 0) {\n        updatedValues.push([\"\"]);\n      }\n      var rangeToUpdate = sheet.getRange(\"A2:A\".concat(updatedValues.length + 1));\n      rangeToUpdate.values = updatedValues;\n      if (updatedValues.length < usedRange.values.length) {\n        var rangeToClear = sheet.getRange(\"A\".concat(updatedValues.length + 2, \":A\").concat(usedRange.values.length + 1));\n        rangeToClear.clear();\n      }\n      return context.sync();\n    });\n  })[\"catch\"](function (error) {\n    console.log(\"Error updating Excel:\", error);\n  });\n}\nfunction removeSpacesFromMobileNumbers() {\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getActiveWorksheet();\n    var usedRange = sheet.getUsedRange();\n    usedRange.load(\"rowCount\");\n    return context.sync().then(function () {\n      var range = sheet.getRange(\"A2:A\" + usedRange.rowCount);\n      range.load(\"values\");\n      return context.sync().then(function () {\n        var cleanedNumbers = range.values.map(function (row) {\n          return [String(row[0]).replace(/\\s+/g, '')]; // Remove all spaces\n        });\n\n        // Write cleaned numbers back to the same range\n        range.values = cleanedNumbers;\n        return context.sync().then(function () {\n          console.log(\"Spaces removed from mobile numbers.\");\n        });\n      });\n    });\n  })[\"catch\"](function (error) {\n    console.error(\"Error removing spaces from mobile numbers:\", error);\n  });\n}\nfunction getWorkbookBlob(_x5) {\n  return _getWorkbookBlob.apply(this, arguments);\n} //Functions \nfunction _getWorkbookBlob() {\n  _getWorkbookBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(data) {\n    var workbook, worksheet, uint8Array;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          workbook = new ExcelJS.Workbook();\n          worksheet = workbook.addWorksheet(\"Sheet1\");\n          worksheet.addRows(data);\n          _context7.next = 5;\n          return workbook.xlsx.writeBuffer();\n        case 5:\n          uint8Array = _context7.sent;\n          return _context7.abrupt(\"return\", new Blob([uint8Array], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n          }));\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _getWorkbookBlob.apply(this, arguments);\n}\nfunction Getphonenumbers() {\n  removeSpacesFromMobileNumbers();\n  return Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getActiveWorksheet();\n    var usedRange = sheet.getUsedRange();\n    usedRange.load(\"rowCount\");\n    return context.sync().then(function () {\n      var mobileNumberColumn = sheet.getRange(\"A2:A\" + usedRange.rowCount);\n      mobileNumberColumn.load(\"values\");\n      return context.sync().then(function () {\n        var phoneNumbers = mobileNumberColumn.values.filter(function (row) {\n          var value = row[0];\n          return value !== null && value !== undefined && String(value).trim() !== '';\n        }).map(function (row) {\n          return String(row[0]).trim();\n        });\n        return phoneNumbers;\n      });\n    });\n  })[\"catch\"](function (error) {\n    console.error('Error collecting non-empty mobile numbers:', error);\n  });\n}\nfunction handleColumnType() {\n  return new Promise(function (resolve) {\n    var columnType = document.getElementById('variable-dropdown').value;\n    resolve(columnType === 'Variable');\n  });\n}\nfunction updateMessageCounter() {\n  var message = document.getElementById('message').value;\n  var charCount = message.length;\n  var unicodeRegex = /[^\\u0000-\\u007F]/;\n  var isUnicode = unicodeRegex.test(message);\n  var charLimit = isUnicode ? 60 : 160;\n  var messageCount = Math.ceil(charCount / charLimit);\n  var charsLeft = charLimit - (charCount % charLimit || charLimit); // Handle zero remainder case\n\n  document.getElementById('char-count').textContent = \"\".concat(charCount, \"/\").concat(charLimit, \" characters\");\n  document.getElementById('char-left').textContent = \"\".concat(charsLeft, \" characters left\");\n  document.getElementById('message-count').textContent = \"\".concat(messageCount, \" message\").concat(messageCount > 1 ? 's' : '');\n}\nfunction displayTemplate(template) {\n  var messageField = document.getElementById('message');\n  messageField.value = template.text;\n}\nfunction handleTemplateChange() {\n  var templateId = document.getElementById('template').value;\n  var shortUrlButton = document.getElementById('urlButton');\n  var placeholderButton = document.getElementById('placeholderButton');\n  var messageField = document.getElementById('message');\n  if (!shortUrlButton || !placeholderButton || !messageField) {\n    return;\n  }\n  if (templateId) {\n    messageField.readOnly = true;\n    fetchTemplateById(templateId).then(function (template) {\n      if (template && template.text) {\n        messageField.value = template.text;\n        shortUrlButton.style.display = 'none';\n        placeholderButton.style.display = 'none';\n        updateMessageCounter();\n      } else {\n        console.error('Template text is undefined or template is null');\n      }\n    })[\"catch\"](function (error) {\n      console.error(\"Error fetching template: \".concat(error));\n    });\n  } else {\n    messageField.readOnly = false;\n    messageField.value = ''; // Clear the message field\n    shortUrlButton.style.display = 'block';\n    placeholderButton.style.display = 'block';\n    updateMessageCounter();\n  }\n}\nfunction clearSavedData() {\n  localStorage.removeItem('formData');\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getActiveWorksheet();\n    var usedRange = sheet.getUsedRange();\n    usedRange.load(\"rowCount\");\n    return context.sync().then(function () {\n      if (usedRange.rowCount > 1) {\n        var range = sheet.getRange(\"A2:A\" + usedRange.rowCount);\n        return context.sync().then(function () {\n          range.clear(Excel.ClearApplyTo.contents);\n          return context.sync().then(function () {\n            console.log(\"Mobile numbers column cleared, header intact.\");\n          });\n        });\n      } else {\n        console.log(\"No data to clear, only the header row exists.\");\n      }\n    }).then(function () {\n      console.log('Saved data cleared.');\n    });\n  })[\"catch\"](function (error) {\n    console.error('Error clearing saved data:', error);\n  });\n}\nfunction backButton() {\n  window.location.href = \"Home.html\";\n}\nfunction handleDropdownChange() {\n  var dropdownValue = document.getElementById('variable-dropdown').value;\n  console.log(\"Dropdown value changed to:\", dropdownValue); // Debugging\n\n  if (dropdownValue === \"variable\") {\n    AddAllColumns();\n  } else {\n    AddMobileNumberColumn();\n  }\n}\nfunction showNotification(message, type) {\n  var notification = document.getElementById('notification');\n  notification.innerHTML = message; // Use innerHTML to support HTML tags\n  notification.className = 'notification';\n  notification.classList.add(type === \"error\" ? 'error' : 'success');\n  notification.classList.add('show');\n  setTimeout(function () {\n    notification.classList.remove('show');\n  }, 3000);\n}\nfunction handleSenderChange(event) {\n  var sender = document.getElementById('sender').value;\n  selectedSender = event.target.value;\n  console.log('Selected sender:', sender);\n  // Perform any additional actions needed when the sender changes\n}\nwindow.filters = function () {\n  var filterInputs = [/*  { searchId: 'sender-search', listId: 'sender-list' },*/\n  {\n    searchId: 'group-search',\n    listId: 'group-list'\n  }, {\n    searchId: 'contact-search',\n    listId: 'contact-list'\n  }\n  /* { searchId: 'template-search', dropdownId: 'template' }*/];\n  filterInputs.forEach(function (filter) {\n    var searchInput = document.getElementById(filter.searchId);\n    var listElement = document.getElementById(filter.listId);\n    var dropdownElement = document.getElementById(filter.dropdownId);\n    if (!searchInput) {\n      console.warn(\"Element not found: searchId=\".concat(filter.searchId));\n      return;\n    }\n    if (listElement) {\n      searchInput.addEventListener('focus', function () {\n        listElement.style.display = 'block';\n      });\n      searchInput.addEventListener('input', function () {\n        var filterValue = searchInput.value.toLowerCase();\n        var items = listElement.querySelectorAll('label');\n        items.forEach(function (item) {\n          var itemText = item.textContent.toLowerCase();\n          item.style.display = itemText.includes(filterValue) ? '' : 'none';\n        });\n        listElement.style.display = items.length > 0 ? 'block' : 'none';\n      });\n      searchInput.addEventListener('blur', function () {\n        setTimeout(function () {\n          if (searchInput.value === '') {\n            listElement.style.display = 'none';\n          }\n        }, 200);\n      });\n    }\n    if (dropdownElement) {\n      searchInput.addEventListener('input', function () {\n        var filterValue = searchInput.value.toLowerCase();\n        var items = dropdownElement.querySelectorAll('option');\n        items.forEach(function (item) {\n          var itemText = item.textContent.toLowerCase();\n          item.style.display = itemText.includes(filterValue) ? '' : 'none';\n        });\n      });\n      searchInput.addEventListener('blur', function () {\n        setTimeout(function () {\n          var items = dropdownElement.querySelectorAll('option');\n          items.forEach(function (item) {\n            item.style.display = '';\n          });\n        }, 200);\n      });\n    }\n  });\n};\n\n//Place Holders \nfunction loadPlaceholders() {\n  var placeholderList = document.getElementById('placeholderList');\n  var placeholderMap = JSON.parse(\"{\\\"LongUrl\\\":\\\"LongUrl\\\",\\\"Title\\\":\\\"Title\\\",\\\"FirstName\\\":\\\"FirstName\\\",\\\"LastName\\\":\\\"LastName\\\",\\\"Email\\\":\\\"Email\\\",\\\"Address\\\":\\\"Address\\\",\\\"City\\\":\\\"City\\\",\\\"Gender\\\":\\\"Gender\\\"}\");\n  for (var _i = 0, _Object$entries = Object.entries(placeholderMap); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n      key = _Object$entries$_i[0],\n      value = _Object$entries$_i[1];\n    var label = document.createElement('label');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.value = key;\n    checkbox.addEventListener('change', handlePlaceholderChange);\n    label.appendChild(checkbox);\n    label.appendChild(document.createTextNode(key));\n    placeholderList.appendChild(label);\n  }\n}\nfunction togglePlaceholderList() {\n  var placeholderList = document.getElementById('placeholderList');\n  if (placeholderList.style.display === 'none' || placeholderList.style.display === '') {\n    placeholderList.style.display = 'block';\n  } else {\n    placeholderList.style.display = 'none';\n  }\n}\nfunction handlePlaceholderChange(event) {\n  var messageField = document.getElementById('message');\n  var placeholder = \"{\".concat(event.target.value, \"}\");\n  var message = messageField.value;\n  if (event.target.checked) {\n    if (!message.includes(placeholder)) {\n      message += \" \".concat(placeholder);\n    }\n  } else {\n    message = message.replace(\" \".concat(placeholder), '').replace(\"\".concat(placeholder, \" \"), '').replace(placeholder, '');\n  }\n  messageField.value = message.trim();\n  updateMessageCounter();\n\n  // Hide the placeholder list after an item is selected\n  var placeholderList = document.getElementById('placeholderList');\n  placeholderList.style.display = 'none';\n}\nfunction extractPlaceholders(message) {\n  var regex = /\\{(\\w+)\\}/g;\n  var placeholders = [];\n  var match;\n  while ((match = regex.exec(message)) !== null) {\n    placeholders.push(\"{\".concat(match[1], \"}\"));\n  }\n  return placeholders;\n}\n\n//URL\n\nfunction openUrlDialog() {\n  var urlDialog = document.getElementById('urlDialog');\n  urlDialog.style.display = 'block';\n}\nfunction handleAddUrl() {\n  return _handleAddUrl.apply(this, arguments);\n}\nfunction _handleAddUrl() {\n  _handleAddUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n    var longUrl, shortUrl;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          longUrl = document.getElementById('longUrl').value;\n          if (!longUrl) {\n            _context8.next = 13;\n            break;\n          }\n          _context8.prev = 2;\n          _context8.next = 5;\n          return getShortUrl(longUrl);\n        case 5:\n          shortUrl = _context8.sent;\n          insertShortUrlIntoMessage(shortUrl);\n          closeUrlDialog();\n          _context8.next = 13;\n          break;\n        case 10:\n          _context8.prev = 10;\n          _context8.t0 = _context8[\"catch\"](2);\n          console.error('Error adding URL:', _context8.t0);\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[2, 10]]);\n  }));\n  return _handleAddUrl.apply(this, arguments);\n}\nfunction closeUrlDialog() {\n  var urlDialog = document.getElementById('urlDialog');\n  urlDialog.style.display = 'none';\n}\nfunction insertShortUrlIntoMessage(shortUrl) {\n  var messageField = document.getElementById('message');\n  messageField.value += \" \".concat(shortUrl);\n  updateMessageCounter();\n}\nfunction getShortUrl(_x6) {\n  return _getShortUrl.apply(this, arguments);\n} //Campaign\nfunction _getShortUrl() {\n  _getShortUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(longUrl) {\n    var apiUrl, response, data;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          apiUrl = \"https://omni-apis.montymobile.com/notification/api/v1/SMSCampaign/short-url\";\n          _context9.prev = 1;\n          _context9.next = 4;\n          return fetchWithAuth(apiUrl, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n        case 4:\n          response = _context9.sent;\n          if (response.ok) {\n            _context9.next = 7;\n            break;\n          }\n          throw new Error(\"Network response was not ok: \".concat(response.statusText));\n        case 7:\n          _context9.next = 9;\n          return response.json();\n        case 9:\n          data = _context9.sent;\n          console.log(data); // Log the entire response\n          return _context9.abrupt(\"return\", data.data.shortUrl);\n        case 14:\n          _context9.prev = 14;\n          _context9.t0 = _context9[\"catch\"](1);\n          console.error('Error getting short URL:', _context9.t0);\n          throw _context9.t0;\n        case 18:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, null, [[1, 14]]);\n  }));\n  return _getShortUrl.apply(this, arguments);\n}\nfunction validateForm(event) {\n  event.preventDefault(); // Prevent the form from submitting\n\n  var campaignName = document.getElementById('campaign-name').value.trim();\n  var message = document.getElementById('message').value.trim();\n  var longUrlInput = document.getElementById('longUrl').value;\n  var sender = document.getElementById('sender').value;\n  var dropdownValue = document.getElementById('variable-dropdown').value;\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getActiveWorksheet();\n    var usedRange = sheet.getUsedRange();\n    usedRange.load('values');\n    return context.sync().then(function () {\n      var mobileNumbers = usedRange.values.map(function (row) {\n        return row[0];\n      }).filter(function (value) {\n        return value;\n      });\n      var mobileNumberCount = mobileNumbers.length;\n      var errorMessage = '';\n      if (campaignName === '') {\n        errorMessage += 'Campaign Name is required.<br>';\n      }\n      if (sender === '') {\n        errorMessage += 'Sender is required.<br>';\n      }\n      if (message === '') {\n        errorMessage += 'Message is required.<br>';\n      }\n      if (mobileNumberCount < 2) {\n        errorMessage += 'At least 2 mobile numbers are required.<br>';\n      }\n      if (errorMessage) {\n        showNotification(errorMessage, \"error\");\n      } else {\n        Getphonenumbers().then(function (phoneNumbers) {\n          launchCampaign(campaignName, sender, message, longUrlInput, phoneNumbers, dropdownValue);\n        })[\"catch\"](function (error) {\n          console.error('Error getting phone numbers:', error);\n          showNotification('Error getting phone numbers. Please try again.', \"Error\");\n        });\n      }\n    });\n  })[\"catch\"](function (error) {\n    console.error(\"Error validating form: \", error);\n  });\n}\nfunction handleValidationError() {\n  isCampaignLaunching = false;\n}\nfunction handleValidationSuccess(response, campaignName) {\n  var data = response.data;\n  var validationData = {\n    campaignName: campaignName,\n    campaignId: data.campaignId,\n    validUrl: data.validUrl || '',\n    // Handle null values\n    inValidUrl: data.inValidUrl || '',\n    // Handle null values\n    totalValidCount: data.totalValidCount || 0,\n    // Handle null values\n    totalInValidCount: data.totalInValidCount || 0,\n    // Handle null values\n    totalCost: data.totalValidRate || 0,\n    // Handle null values\n    reason: data.reason || ''\n  };\n  console.log(validationData);\n  if (validationData.reason === \"do not have enough balance\") {\n    showNotification(\"You do not have enough balance.\");\n    return; // Prevent navigation to the next HTML page\n  }\n  localStorage.setItem('validationData', JSON.stringify(validationData));\n  saveFormData();\n  window.location.href = 'SendCampaign.html';\n}\nfunction launchCampaign(campaignName, sender, message, longUrlInput, phoneNumbers, dropdownValue) {\n  var hasShortUrl = false;\n  var longUrl = null;\n  if (longUrlInput) {\n    hasShortUrl = true;\n    longUrl = longUrlInput;\n  }\n  if (dropdownValue === 'variable') {\n    validateCampaignWithFile(campaignName, message, sender, hasShortUrl, longUrl).then(function (data) {\n      handleValidationSuccess(data, campaignName);\n    })[\"catch\"](function (error) {\n      handleValidationError();\n    });\n  } else if (dropdownValue === 'no-variable') {\n    validateCampaignNormally(campaignName, message, sender, phoneNumbers, hasShortUrl, longUrl).then(function (data) {\n      handleValidationSuccess(data, campaignName);\n    })[\"catch\"](function (error) {\n      handleValidationError();\n    });\n  }\n}\nfunction validateCampaignNormally(_x7, _x8, _x9, _x10, _x11, _x12) {\n  return _validateCampaignNormally.apply(this, arguments);\n}\nfunction _validateCampaignNormally() {\n  _validateCampaignNormally = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(campaignName, campaignContent, senderId, phoneNumbers, hasShortUrl, longUrl) {\n    var apiValidate, placeholders, requestBody, response, data;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          apiValidate = \"https://omni-apis.montymobile.com/notification/api/v1/SMSCampaign/campaign-contact\";\n          placeholders = extractPlaceholders(campaignContent);\n          requestBody = {\n            Campaign: {\n              ChannelId: \"acaaa147-6836-4d60-97c3-3fb1db02fb63\",\n              Name: campaignName,\n              Content: campaignContent,\n              SenderId: senderId,\n              HasShortUrl: hasShortUrl,\n              serviceTag: \"ONE_WAY_SMS\",\n              LongUrl: longUrl,\n              ClientAccountId: localStorage.getItem('clientId'),\n              Variables: placeholders,\n              HasBlacklistShortUrl: false\n            },\n            PhoneNumbers: phoneNumbers.map(String)\n          };\n          _context10.prev = 3;\n          _context10.next = 6;\n          return fetchWithAuth(apiValidate, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestBody)\n          });\n        case 6:\n          response = _context10.sent;\n          if (response.ok) {\n            _context10.next = 9;\n            break;\n          }\n          throw new Error(\"Network response was not ok: \".concat(response.statusText));\n        case 9:\n          _context10.next = 11;\n          return response.json();\n        case 11:\n          data = _context10.sent;\n          return _context10.abrupt(\"return\", data);\n        case 15:\n          _context10.prev = 15;\n          _context10.t0 = _context10[\"catch\"](3);\n          console.error('Error validating campaign:', _context10.t0);\n          throw _context10.t0;\n        case 19:\n          _context10.prev = 19;\n          return _context10.finish(19);\n        case 21:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10, null, [[3, 15, 19, 21]]);\n  }));\n  return _validateCampaignNormally.apply(this, arguments);\n}\nfunction validateCampaignWithFile(_x13, _x14, _x15, _x16, _x17) {\n  return _validateCampaignWithFile.apply(this, arguments);\n}\nfunction _validateCampaignWithFile() {\n  _validateCampaignWithFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(campaignName, campaignContent, senderId, hasShortUrl, longUrl) {\n    var apiValidateFile, SMSCHannel, placeholders;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          apiValidateFile = \"https://omni-apis.montymobile.com/notification/api/v1/SMSCampaign/campaign-file\";\n          SMSCHannel = \"acaaa147-6836-4d60-97c3-3fb1db02fb63\";\n          placeholders = extractPlaceholders(campaignContent);\n          _context12.prev = 3;\n          _context12.next = 6;\n          return Excel.run( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(context) {\n              var workbook, worksheet, usedRange, workbookBlob, formData, response, data;\n              return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    workbook = context.workbook;\n                    worksheet = workbook.worksheets.getActiveWorksheet();\n                    usedRange = worksheet.getUsedRange();\n                    usedRange.load(\"values\");\n                    _context11.next = 6;\n                    return context.sync();\n                  case 6:\n                    _context11.next = 8;\n                    return getWorkbookBlob(usedRange.values);\n                  case 8:\n                    workbookBlob = _context11.sent;\n                    formData = new FormData();\n                    formData.append('file', workbookBlob, \"SampleDestinationsWithVariablesAndLongUrl.xlsx\");\n                    formData.append('countryCode', '');\n                    formData.append('Campaign', JSON.stringify({\n                      channelId: SMSCHannel,\n                      Name: campaignName,\n                      Content: campaignContent,\n                      SenderId: senderId,\n                      HasShortUrl: hasShortUrl,\n                      LongUrl: longUrl,\n                      ClientAccountId: localStorage.getItem('clientId'),\n                      Variables: placeholders,\n                      HasBlacklistShortUrl: false\n                    }));\n                    formData.append('LongUrlFromFile', \"false\");\n                    _context11.next = 16;\n                    return fetchWithAuth(apiValidateFile, {\n                      method: 'POST',\n                      headers: {\n                        'Accept': 'application/json, text/plain, */*',\n                        'Accept-Language': 'en-US,en;q=0.9,ar;q=0.8',\n                        'Cache-Control': 'no-cache',\n                        'Connection': 'keep-alive',\n                        'Origin': 'https://app.montymobile.com',\n                        'Pragma': 'no-cache',\n                        'Referer': 'https://app.montymobile.com/',\n                        'Sec-Fetch-Dest': 'empty',\n                        'Sec-Fetch-Mode': 'cors',\n                        'Sec-Fetch-Site': 'same-site',\n                        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36',\n                        'sec-ch-ua': '\"Google Chrome\";v=\"125\", \"Chromium\";v=\"125\", \"Not.A/Brand\";v=\"24\"',\n                        'sec-ch-ua-mobile': '?0',\n                        'sec-ch-ua-platform': '\"Windows\"'\n                      },\n                      body: formData\n                    });\n                  case 16:\n                    response = _context11.sent;\n                    if (response.ok) {\n                      _context11.next = 19;\n                      break;\n                    }\n                    throw new Error(\"Network response was not ok: \".concat(response.statusText));\n                  case 19:\n                    _context11.next = 21;\n                    return response.json();\n                  case 21:\n                    data = _context11.sent;\n                    handleValidationSuccess(data, campaignName);\n                  case 23:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11);\n            }));\n            return function (_x18) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n        case 6:\n          _context12.next = 12;\n          break;\n        case 8:\n          _context12.prev = 8;\n          _context12.t0 = _context12[\"catch\"](3);\n          console.error(\"Error validating campaign with file: \", _context12.t0);\n          showNotification('Error validating campaign. Please try again.', \"Error\");\n        case 12:\n          _context12.prev = 12;\n          return _context12.finish(12);\n        case 14:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12, null, [[3, 8, 12, 14]]);\n  }));\n  return _validateCampaignWithFile.apply(this, arguments);\n}\n\n//# sourceURL=webpack://montysmsweb/./JS/SMSCampaign.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./JS/SMSCampaign.js"]();
/******/ 	
/******/ })()
;